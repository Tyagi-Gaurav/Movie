plugins {
    id 'org.springframework.boot' version '2.5.2'
    id 'jacoco'
    id 'com.github.spotbugs' version '4.7.2'
    id 'pmd'
}

repositories {
    mavenCentral()
}

jacoco {
    toolVersion = "0.8.6"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

bootJar {
    mainClass = 'com.gt.scr.movie.Application'
}

processResources {
    with copySpec {
        from 'src/main/resources'
        include '**/application*.yml'
        include '**/*.properties'
    }

    duplicatesStrategy = "include"
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-test"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-test"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-data-redis"
    implementation "org.springframework:spring-webmvc"
    implementation "org.springframework:spring-core"
    implementation "org.apache.commons:commons-lang3"
    implementation "org.apache.commons:commons-text"
    implementation "org.slf4j:slf4j-log4j12"

    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
    implementation "com.fasterxml.jackson.core:jackson-core"
    implementation "com.fasterxml.jackson.core:jackson-databind"
    implementation "com.fasterxml.jackson.core:jackson-annotations"

    implementation "io.jsonwebtoken:jjwt-api"
    implementation "io.jsonwebtoken:jjwt-impl"
    implementation "io.jsonwebtoken:jjwt-jackson"
    implementation "it.ozimov:embedded-redis"

    //Immutables
    implementation "org.immutables:value-annotations"
    implementation "org.immutables:value"
    implementation "org.immutables:builder"
    implementation "org.immutables:serial"
    implementation "com.google.guava:guava"
    implementation "io.micrometer:micrometer-core"
    annotationProcessor "org.immutables:value"

    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "org.junit.jupiter:junit-jupiter-engine"
    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.11.0'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport

    jacoco {
        excludes = ['com/toptal/scr/tz/Application.class',
                     'com/toptal/scr/tz/Grace**']
    }
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled false
        csv.enabled false
        html.destination layout.buildDirectory.dir('jacocoHtml').get().asFile
    }
}

spotbugs {
    toolVersion = '4.2.3'
    ignoreFailures = false
    excludeFilter = file("gradle/spotbugs/exclusions.xml")
}

spotbugsMain {
    reports {
        html {
            enabled = true
            destination = file("$buildDir/reports/spotbugs/main/spotbugs.html")
            stylesheet = 'fancy-hist.xsl'
        }
    }
}

pmd {
    consoleOutput = true
    toolVersion = "6.21.0"
    rulesMinimumPriority = 2
    ruleSets = ["category/java/errorprone.xml"]
}