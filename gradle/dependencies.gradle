apply plugin: 'io.spring.dependency-management'

ext {
    springBootVersion = '2.4.5'
    springVersion = '5.3.6'
    cucumberVersion = '6.10.3'
    junitVersion = '5.7.1'
    junitPlatformVersion = '1.7.1'
    immutablesVersion = '2.8.8'
    jacksonVersion = '2.10.3'
    assertJVersion = '3.15.0'
    jerseyVersion = '2.26'
    mockitoVersion = '2.25.0'
    testContainerVersion = '1.15.0'
    logbackVersion = '1.3.0-alpha5'
    slf4jVersion = '2.0.0-alpha1'
    commonsLang3Version = '3.12.0'
    commonsLoggingVersion = '1.2'
    h2DbVersion = '1.4.200'
    liquibaseVersion = '3.8.9'
    reslience4JVersion = '1.5.0'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:2.4.5"
    }
    dependencies {
        //API
        dependency "org.immutables:value:$immutablesVersion"
        dependency "org.immutables:builder:$immutablesVersion"
        dependency "org.immutables:value-annotations:$immutablesVersion"
//        dependency "net.logstash.logback:logstash-logback-encoder:$logstashVersion"
        dependency "org.slf4j:slf4j-api:$slf4jVersion"
        dependency "org.springframework:spring-context:${springVersion}"
        dependency "org.springframework:spring-webmvc:${springVersion}"
        dependency "org.springframework:spring-tx:${springVersion}"
        dependency "org.springframework:spring-jdbc:${springVersion}"
        dependency "org.springframework:spring-aop:${springVersion}"
        dependency "org.slf4j:slf4j-log4j12:$slf4jVersion"
        dependency "commons-logging:commons-logging:$commonsLoggingVersion"
//        dependency "io.micrometer:micrometer-registry-prometheus:$micrometerVersion"
//        dependency "io.micrometer:micrometer-core:$micrometerVersion"
//
//        dependency "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
//        dependency "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
//        dependency "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"
//        dependency "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion"
//        dependency "io.github.resilience4j:resilience4j-bulkhead:$reslience4JVersion"
//        dependency "io.github.resilience4j:resilience4j-retry:$reslience4JVersion"
//        dependency "io.github.resilience4j:resilience4j-circuitbreaker:$reslience4JVersion"
//        dependency "io.github.resilience4j:resilience4j-all:$reslience4JVersion"
//
        //TEST
        dependency("org.springframework.boot:spring-boot-starter-test:$springBootVersion") {
            exclude 'org.junit.vintage:junit-vintage-engine'
        }

        dependency "org.junit.jupiter:junit-jupiter-api:$junitVersion"
        dependency "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
        dependency "org.junit.platform:junit-platform-commons:$junitPlatformVersion"
        dependency "org.junit.platform:junit-platform-runner:$junitPlatformVersion"
        dependency "org.junit.platform:junit-platform-suite-api:$junitPlatformVersion"
//        dependency "org.testcontainers:junit-jupiter:$testContainerVersion"
//        dependency "org.testcontainers:kafka:$testContainerVersion"
//
        dependency "org.mockito:mockito-core:$mockitoVersion"
        dependency "org.mockito:mockito-junit-jupiter:$mockitoVersion"
        dependency "org.apache.commons:commons-lang3:$commonsLang3Version"

        dependency "io.cucumber:cucumber-java8:$cucumberVersion"
        dependency "io.cucumber:cucumber-junit:$cucumberVersion"
        dependency "io.cucumber:cucumber-spring:$cucumberVersion"
        dependency "org.assertj:assertj-core:$assertJVersion"
//        dependency "org.awaitility:awaitility:$awaitilityVersion"
//        dependency "com.mchange:c3p0:$c3p0Version"
//        dependency "com.h2database:h2:$h2DbVersion"
//        dependency "mysql:mysql-connector-java:$mysqlVersion"
//        dependency "javax.xml.bind:jaxb-api:$xmlBindVersion"
//        dependency "org.liquibase:liquibase-core:$liquibaseVersion"
//        dependency "org.apache.kafka:kafka-clients:$kafkaVersion"
//        dependency "org.springframework.kafka:spring-kafka-test:$springKafkaVersion"
//        dependency "org.springframework.kafka:spring-kafka:$springKafkaVersion"
//        dependency "org.apache.kafka:kafka_2.12:$kafkaVersion"
//        dependency("it.ozimov:embedded-redis:$embeddedRedisVersion") {
//            exclude "org.slf4j:slf4j-simple"
//        }
    }
}