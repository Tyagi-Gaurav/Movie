allprojects {
    repositories {
        mavenCentral()
    }
}

subprojects {
    repositories {
        mavenCentral()
    }

    apply plugin: "java"
    apply plugin: "idea"

    configure(subprojects.findAll {it.name != 'api-gateway'}) {
        plugins {
            id "org.sonarqube" version "3.3"
        }

        sonarqube {
            properties {
                property "sonar.projectKey", "Tyagi-Gaurav_Movie"
                property "sonar.organization", "tyagi-gaurav"
                property "sonar.host.url", "https://sonarcloud.io"
                property "sonar.java.coveragePlugin", "jacoco"
                property "sonar.dynamicAnalysis", "reuseReports"
                property "sonar.jacoco.reportPath", "$projectDir/application/build/jacoco"
                property "sonar.coverage.exclusions", "**/com/gt/scr/movie/Application**, **/com/gt/scr/*/config/**, **/com/gt/scr/*/security/WebSecurityConfig**, **/com/gt/scr/*/resource/SecurityContextHolder**, **/com/gt/scr/*/filter/LoggingFilter**,**/com/gt/scr/user/resource/domain/**, **/com/gt/scr/user/config/**,**/com/gt/scr/user/Application**,**/com/gt/scr/user/ConfigVerticle**,**/com/gt/scr/utils/JwtTokenUtil**,**/com/gt/scr/movie/Graceful**"
            }
        }
    }

    sourceCompatibility = JavaVersion.VERSION_16
    targetCompatibility = JavaVersion.VERSION_16
    group 'gt.movie'

    project.ext {
        springBootVersion = '2.5.3'
    }

    jar {
        manifest {
            attributes('Build-Time-ISO-8601': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"))
        }
    }

    test {
        useJUnitPlatform()
    }

    task buildImageDependencies(dependsOn: ["compileJava", "jar"])

    project.plugins.withId("net.ltgt.apt") {
        try {
            // automatically apply net.ltgt.apt-idea whenever net.ltgt.apt is used
            project.apply plugin: "net.ltgt.apt-idea"
            // disable addAptDependencies (if you delegate build actions to Gradle)
            project.plugins.withType(JavaPlugin) {
                project.afterEvaluate {
                    project.idea.module.apt.addAptDependencies = false
                }
            }
        } catch (UnknownPluginException) {
            // ignore, in case an older version of net.ltgt.apt is being used
            // that doesn't come with net.ltgt.apt-idea.
        }
    }
}

task cdImage(dependsOn: ['release', 'bootjar'])